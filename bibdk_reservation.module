<?php

/**
 * tODO:
 * 
 *  * Write test
 *  * Implement submit function (Cannot be done until next step is ready)
 */
// Load Field module hooks.
module_load_include('inc', 'bibdk_reservation', 'bibdk_reservation.field');


/* Dette var en test
function bibdk_user_view ($account, $view_mode, $langcode) {
  print_r(func_get_args());
  die();
}*/


/*
 * Implementation of hook_form
 */
function bibdk_reservation_button_form($form, &$form_state, $entity_ids, $type, $entity_type) {

  $form['bibdk_reservation_button']['entity_id']["#tree"] = true;
  
  
  
  foreach ($entity_ids as $entity_id) {
    $form['bibdk_reservation_button']['entity_id'][] = array(
      '#type' => 'hidden',
      "#value" => $entity_id,
    );
  }

  $form['bibdk_reservation_button']['type'] = array(
    '#type' => 'hidden',
    "#value" => $type,
  );
  $form['bibdk_reservation_button']['submit'] = array(
    '#type' => 'submit',
    '#value' => ($entity_type == "bibdkSubwork") ? t("Order any edition") : t("Order this @type", array("@type" => $type)),
    '#executes_submit_callback' => TRUE,
  );

  return $form;
}

/*
 * Implementation of hook_form_submit
 */

function bibdk_reservation_button_form_submit($form, $form_state) {
  drupal_set_message(t("You have expressed a wish to reserve @entity_id of type @type", array (
    "@entity_id" => implode(", ", $form_state['values']['entity_id']), 
    "@type" => $form_state['values']['type'] 
  )));
}

function bibdk_reservation_ding_entity_buttons($type, $entity) {
  
}

/*
 * parse information texts 
 */

function get_reservation_information_text (manifestation $manefistation){
  $restictedUse = $manefistation->getRestrictedUse();
  
  if (!isset($restictedUse))
    return null;

  switch ($restictedUse) {
    
  }
  
}

?>
